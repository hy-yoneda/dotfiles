[include]
  path = ~/.gitconfig.local
[color]
  ui = auto
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  grep = auto
[core]
  pager = less -q -R
  excludesfile = ~/.gitignore
  excludesfile = ~/dotfiles/.gitignore
  excludesfile = ~/.gitignore.local
  autocrlf = false
  safecrlf = true
  quotepath = off
  preloadindex = true
  fscache = true
[merge]
  keepBackup = false
[pull]
  rebase = true
[mergetool]
  keepBackup = false
  keepTemporaries = false
  trustExitCode = false
  keepBackup = false
[i18n]
  filesEncoding = utf-8
[alias]
  alias = "!if test -z $1; then loop=; for k in `git config --get-regexp ^alias\\. | sort | sed -e 's/^alias\\.\\(\\S*\\).*/\\1/g'`; do echo -n $k; loop=${loop}1; if test ${#loop} -lt 5; then echo -n '\t'; else echo; loop=; fi; done; exit; fi; git config --list | grep ^alias\\.$1= | sed -e s/^alias\\.//; exit;"
  br = branch
  co = checkout
  ci = commit
  cim = commit -m
  ci-amend = commit --amend
  ci-amend-no-edit = commit --amend --no-edit
  df = diff --color
  ds = diff --staged --color
  dir = rev-parse --show-cdup
  st = status
  stt = status -uno
  sh = show --color
  shs = show --color --stat
  re = rebase
  reh = reset --hard
  res = reset --soft
  fe = fetch
  pr = pull --rebase
  graph = log --graph --date=short --decorate=short --pretty=format:'%Cgreen%h %Creset%cd %Cblue%cn %Cred%d %Creset%s'
  tree = log --graph --date=format-local:'%Y-%m-%d-%H:%M' --abbrev-commit --pretty=format:'%Cgreen%h %Creset%cd %C(blue)%an %Creset-%C(yellow)%d %Creset%s'
  tp = !git tree $(git show-branch --merge-base $(git parent) HEAD)..HEAD
  today = !git tree --since='12 hour ago' --author=\"$(git config user.name)\"
  hash = log --pretty=format:\"%h\" --reverse
  update = !sh -c 'git fe origin && git co $1 && git reset --keep origin/$1' $*
  cb = !git current-branch
  current-branch = rev-parse --abbrev-ref HEAD
  pfr = push-for-review
  delete-merged-branches = !git branch --merged | grep -v master | grep -v release | grep -v client | grep -v \\* | xargs git branch -d
  set-upstream = !sh -c 'CURRENT_BRANCH=$(git current-branch) && echo remote=$2 && echo set-upstream-to=$1 && git config --local branch.${CURRENT_BRANCH}.remote $2 && git config --local branch.${CURRENT_BRANCH}.merge refs/heads/$1' $*
  get-upstream = !sh -c 'CURRENT_BRANCH=$(git current-branch) && echo remote=$(git config --local branch.${CURRENT_BRANCH}.remote) && echo set-upstream-to=$(git config --local branch.${CURRENT_BRANCH}.merge)'
